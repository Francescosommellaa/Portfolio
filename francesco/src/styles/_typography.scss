@use "sass:list";

//===============
// Font Variables
$fontBody: "Satoshi", sans-serif;
$fontScript: "Allura", cursive;

//===============
// Font Rules
$fontRules: (
  // topBar
  topBar:
    (
      L: (
        $fontBody,
        1rem,
        500,
        1.25rem,
      ),
      M: (
        $fontBody,
        0.875rem,
        500,
        1rem,
      ),
      S: (
        $fontBody,
        0.625rem,
        500,
        0.875rem,
      ),
    ),

  // Headings
  h1:
    (
      L: (
        $fontBody,
        12rem,
        500,
        90%,
      ),
      M: (
        $fontBody,
        7.5rem,
        500,
        90%,
      ),
      S: (
        $fontBody,
        3.5rem,
        500,
        90%,
      ),
    ),
  nav: (
    L: (
      $fontBody,
      1.5rem,
      500,
      auto,
    ),
    M: (
      $fontBody,
      3.25rem,
      500,
      auto,
    ),
    S: (
      $fontBody,
      3rem,
      500,
      auto,
    ),
  ),
  subTitle: (
    L: (
      $fontBody,
      1.5rem,
      400,
      1.625rem,
    ),
    M: (
      $fontBody,
      1.5rem,
      400,
      1.625rem,
    ),
    S: (
      $fontBody,
      0.75rem,
      400,
      1.625rem,
    ),
  ),

  // Paragraph
  paragraphL:
    (
      L: (
        $fontBody,
        2.25rem,
        500,
        auto,
      ),
      M: (
        $fontBody,
        2rem,
        500,
        auto,
      ),
      S: (
        $fontBody,
        1.5rem,
        500,
        auto,
      ),
    ),
  paragraph: (
    L: (
      $fontBody,
      1.5rem,
      500,
      1.75rem,
    ),
    M: (
      $fontBody,
      1.5rem,
      500,
      1.75rem,
    ),
    S: (
      $fontBody,
      1rem,
      500,
      1.25rem,
    ),
    X: (
      $fontBody,
      1rem,
      500,
      auto,
    ),
  ),

  //Num
  Num:
    (
      L: (
        $fontBody,
        2.25rem,
        400,
        auto,
      ),
      M: (
        $fontBody,
        2rem,
        400,
        auto,
      ),
      S: (
        $fontBody,
        1.75rem,
        400,
        auto,
      ),
    ),

  // Script
  scriptNum:
    (
      L: (
        $fontScript,
        2.875rem,
        400,
        auto,
      ),
      M: (
        $fontScript,
        2.5rem,
        400,
        auto,
      ),
      S: (
        $fontScript,
        2.25rem,
        400,
        auto,
      ),
    ),
  scriptT: (
    L: (
      $fontScript,
      17.5rem,
      400,
      auto,
    ),
    M: (
      $fontScript,
      11.25rem,
      400,
      auto,
    ),
    S: (
      $fontScript,
      5.625rem,
      400,
      auto,
    ),
  ),
  scriptN: (
    L: (
      $fontScript,
      2.5rem,
      400,
      auto,
    ),
    M: (
      $fontScript,
      6rem,
      400,
      auto,
    ),
    S: (
      $fontScript,
      5.75rem,
      400,
      auto,
    ),
  ),
  scriptP: (
    L: (
      $fontScript,
      2.25rem,
      400,
      auto,
    ),
    M: (
      $fontScript,
      2.25rem,
      400,
      auto,
    ),
    S: (
      $fontScript,
      1.875rem,
      400,
      auto,
    ),
  )
);

//===============
// Mixin
@mixin uppercase {
  text-transform: uppercase;
}

//===============
// Dynamic Font Classes Generator
@each $type, $sizes in $fontRules {
  @each $sizeKey, $value in $sizes {
    // Livello base (es: h1-L)
    @if type-of($value) == "list" {
      .#{$type}-#{$sizeKey} {
        font-family: list.nth($value, 1);
        font-size: list.nth($value, 2);
        font-weight: list.nth($value, 3);
        line-height: list.nth($value, 4);
      }

      // Livello intermedio (es: h2-L-B)
    } @else if type-of($value) == "map" {
      @each $variantKey, $variantValue in $value {
        .#{$type}-#{$sizeKey}-#{$variantKey} {
          font-family: list.nth($variantValue, 1);
          font-size: list.nth($variantValue, 2);
          font-weight: list.nth($variantValue, 3);
          line-height: list.nth($variantValue, 4);
        }
      }
    }
  }
}
